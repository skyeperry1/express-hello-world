let bp = {
    "pyNote": "By utilizing this file, you agree that the file and the contents are confidential and are provided solely for use with Pegasystems applications and products. Information in this file may have been generated by artificial intelligence and should be validated by a human prior to use. This file is provided as is.",
    "pxObjClass": "PegaBlueprint-Data-Blueprint",
    "pyBPVersion": "1.0",
    "pyDescription": "Blueprint from BP-123230 -- Manage and resolve customer concerns and requests related to account with bill pay, bank fees, or finance charges",
    "pyGUID": "0a3f982e-5303-4df8-a2e1-1b9f048ba37b",
    "pyLabel": "Blueprint from BP-123230 -- Account Issue Management",
    "pzLoadTime": "December 16, 2024 at 6:20:16 PM GMT",
    "pzPageNameBase": "D_PegaBlueprint",
    "pzPageNameHash": "_pa733221251039254pz",
    "pxDPParameters": {
      "OutputDestination": "(null/empty)",
      "SaveAsTemplate": "false",
      "SourceBlueprintKey": "(null/empty)",
      "SourceDADCaseID": "BP-123230",
      "SourceTemplateKey": "(null/empty)"
    },
    "pyDADInfo": {
      "Organization": "U+ Bank",
      "pxObjClass": "PegaBlueprint-Data-DAD",
      "pyDepartment": "Customer Service",
      "pyDescription": "Manage and resolve customer concerns and requests related to account with bill pay, bank fees, or finance charges",
      "pyIndustry": "Banking",
      "pyLabel": "Account Issue Management",
      "pyPreferredLanguage": "English",
      "pySubIndustry": "Retail Banking",
      "pyCandidateCaseTypes": [
        {
          "pxObjClass": "PegaBlueprint-Data-CandidateCaseTypes",
          "pyDCDChildSpunOff": "true",
          "pyDescription": "Customer Dispute Resolution handles cases where customers raise concerns or disputes related to unauthorized transactions, billing errors, or incorrect fees. The workflow involves investigating the issue, communicating with the customer, and resolving the dispute in compliance with banking regulations and policies.",
          "pyGUID": "DCDCandidate20241216T181620.460 GMT",
          "pyLabel": "Dispute Resolution",
          "pyDCDInfo": {
            "pxObjClass": "PegaBlueprint-Data-DCD",
            "pyDescription": "Customer Dispute Resolution handles cases where customers raise concerns or disputes related to unauthorized transactions, billing errors, or incorrect fees. The workflow involves investigating the issue, communicating with the customer, and resolving the dispute in compliance with banking regulations and policies.",
            "pyLabel": "Dispute Resolution",
            "pyAttachmentCategories": [],
            "pyCandidateAlternateStages": [],
            "pyCandidateChildCaseTypes": [],
            "pyCandidateCreateFields": [],
            "pyCandidateFields": [
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "Account Number: The unique identifier for the customer's bank account associated with the dispute.",
                "pyFieldSource": "User input",
                "pyGUID": "bd2face7-0d29-49a7-a253-0547a553e3d8",
                "pyIsPrimaryField": "true",
                "pyLabel": "Account Number"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "Customer Name: The full name of the customer raising the dispute.",
                "pyFieldSource": "User input",
                "pyGUID": "16a0b601-f7d5-419c-98a2-e4cc5e472cbc",
                "pyIsPrimaryField": "true",
                "pyLabel": "Customer Name"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "Dispute Description: A detailed description of the customer's concern or dispute.",
                "pyFieldSource": "User input",
                "pyGUID": "7c129cc2-3088-4cf8-96c8-bb886eb26b7c",
                "pyIsPrimaryField": "true",
                "pyLabel": "Dispute Description"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "Dispute Type: The category of the dispute, such as unauthorized transaction, billing error, or incorrect fees.",
                "pyFieldSource": "User input",
                "pyGUID": "96784d61-7085-4a93-ab80-bc27dc2350a9",
                "pyIsPrimaryField": "true",
                "pyLabel": "Dispute Type"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "Customer Contact Number: The contact number of the customer raising the dispute.",
                "pyFieldSource": "User input",
                "pyGUID": "d68f0a44-ab81-43bb-980d-295c974e2880",
                "pyIsPrimaryField": "false",
                "pyLabel": "Customer Contact Number"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "Customer Email: The email address of the customer raising the dispute.",
                "pyFieldSource": "User input",
                "pyGUID": "4da1a893-a3af-4200-a808-80c1a9784815",
                "pyIsPrimaryField": "false",
                "pyLabel": "Customer Email"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Date",
                "pyDescription": "Dispute Raised Date: The date when the customer raised the dispute.",
                "pyFieldSource": "User input",
                "pyGUID": "b6b6d371-3997-4adf-a4d3-211939e21b84",
                "pyIsPrimaryField": "false",
                "pyLabel": "Dispute Raised Date"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Currency",
                "pyDescription": "Disputed Amount: The monetary value of the disputed transaction or fees.",
                "pyFieldSource": "User input",
                "pyGUID": "dee87a3d-b03f-44f0-a1d1-942e03835dcb",
                "pyIsPrimaryField": "false",
                "pyLabel": "Disputed Amount"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "Resolution Notes: Detailed notes on the steps taken to investigate and resolve the dispute.",
                "pyFieldSource": "User input",
                "pyGUID": "d35be141-a4a8-4513-a040-415aae8db4d5",
                "pyIsPrimaryField": "false",
                "pyLabel": "Resolution Notes"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "Resolution Outcome: The final resolution or outcome of the dispute, such as refund processed, fees adjusted, or transaction verified.",
                "pyFieldSource": "User input",
                "pyGUID": "d5ae3df4-d904-4a5b-a9a3-c777ae0c599a",
                "pyIsPrimaryField": "false",
                "pyLabel": "Resolution Outcome"
              }
            ],
            "pyCandidateStages": [
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateStages",
                "pyDescription": "Capture all relevant information regarding the customer dispute",
                "pyLabel": "Capture Dispute Details",
                "pyCandidateStageSteps": [
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Assign the dispute investigation task to a qualified investigator",
                    "pyLabel": "Assign Dispute Investigator",
                    "pyStepType": "Assignment"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Assess if the dispute is related to an unauthorized transaction",
                    "pyLabel": "Verify Unauthorized Transaction",
                    "pyStepType": "Decision"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Determine if the dispute is due to a billing error",
                    "pyLabel": "Check Billing Accuracy",
                    "pyStepType": "Decision"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Evaluate the validity of the disputed fees",
                    "pyLabel": "Review Fee Validity",
                    "pyStepType": "Decision"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Inform the customer that their dispute is under investigation",
                    "pyLabel": "Notify Customer of Investigation",
                    "pyStepType": "Send Notification"
                  }
                ]
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateStages",
                "pyDescription": "Thoroughly investigate the customer dispute based on captured details",
                "pyLabel": "Investigate Dispute",
                "pyCandidateStageSteps": [
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Assign the task of communicating with the customer regarding the dispute",
                    "pyLabel": "Assign Customer Communication",
                    "pyStepType": "Assignment"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Automatically retrieve transaction records related to the dispute",
                    "pyLabel": "Retrieve Transaction Records",
                    "pyStepType": "Automation"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Determine if the resolution process complies with banking regulations",
                    "pyLabel": "Assess Regulatory Compliance",
                    "pyStepType": "Decision"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Notify internal stakeholders about the ongoing dispute investigation",
                    "pyLabel": "Notify Internal Stakeholders",
                    "pyStepType": "Send Notification"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Provide the customer with updates on the progress of the investigation",
                    "pyLabel": "Update Customer on Investigation",
                    "pyStepType": "Send Notification"
                  }
                ]
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateStages",
                "pyDescription": "Conclude the dispute resolution process with a clear outcome",
                "pyLabel": "Resolution",
                "pyCandidateStageSteps": [
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Assess if the investigation results warrant the approval of dispute resolution",
                    "pyLabel": "Approve Dispute Resolution",
                    "pyStepType": "Decision"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Authorize the refund if deemed necessary for dispute resolution",
                    "pyLabel": "Authorize Refund",
                    "pyStepType": "Approval"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Automatically update transaction records based on the resolution outcome",
                    "pyLabel": "Update Transaction Records",
                    "pyStepType": "Automation"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Inform the customer about the outcome of the dispute resolution",
                    "pyLabel": "Notify Customer of Resolution",
                    "pyStepType": "Send Notification"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Notify all parties involved and close the dispute case",
                    "pyLabel": "Close Dispute Case",
                    "pyStepType": "Send Notification"
                  }
                ]
              }
            ]
          }
        },
        {
          "pxObjClass": "PegaBlueprint-Data-CandidateCaseTypes",
          "pyDCDChildSpunOff": "true",
          "pyDescription": "Account Fee Waiver manages requests from customers seeking waivers for specific bank fees or finance charges. The workflow includes evaluating the customer's request, assessing eligibility based on predefined criteria, and processing the waiver while ensuring adherence to fee waiver policies.",
          "pyGUID": "DCDCandidate20241216T181620.461 GMT",
          "pyLabel": "Fee Waiver",
          "pyDCDInfo": {
            "pxObjClass": "PegaBlueprint-Data-DCD",
            "pyDescription": "Account Fee Waiver manages requests from customers seeking waivers for specific bank fees or finance charges. The workflow includes evaluating the customer's request, assessing eligibility based on predefined criteria, and processing the waiver while ensuring adherence to fee waiver policies.",
            "pyLabel": "Fee Waiver",
            "pyAttachmentCategories": [],
            "pyCandidateAlternateStages": [],
            "pyCandidateChildCaseTypes": [],
            "pyCandidateCreateFields": [],
            "pyCandidateFields": [
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "The unique identifier for the customer's account within the bank's system.",
                "pyFieldSource": "User input",
                "pyGUID": "66d81cc4-dcdb-4aae-8acb-b311a20c2997",
                "pyIsPrimaryField": "true",
                "pyLabel": "Account Number"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Currency",
                "pyDescription": "The amount of the fee or finance charge for which the customer is seeking a waiver.",
                "pyFieldSource": "User input",
                "pyGUID": "fc34ca2c-0d3a-47bc-a5f7-6ecf6497d628",
                "pyIsPrimaryField": "true",
                "pyLabel": "Fee Amount"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "The type of fee or finance charge for which the customer is requesting a waiver.",
                "pyFieldSource": "User input",
                "pyGUID": "ec878021-61d4-4b9a-a3df-314419deaebd",
                "pyIsPrimaryField": "true",
                "pyLabel": "Fee Type"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "The reason provided by the customer for requesting the waiver.",
                "pyFieldSource": "User input",
                "pyGUID": "176a1d51-f6a1-489b-8750-321fb5e480b7",
                "pyIsPrimaryField": "true",
                "pyLabel": "Waiver Reason"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "Any additional notes or comments relevant to the fee waiver request and its processing.",
                "pyFieldSource": "User input",
                "pyGUID": "e0dbe9c0-f426-4400-b38a-b8780b6bdc16",
                "pyIsPrimaryField": "false",
                "pyLabel": "Additional Comments"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "The customer's explanation or additional details related to the waiver request.",
                "pyFieldSource": "User input",
                "pyGUID": "4cf370d6-2b24-42fb-81d7-70bb8bddb04e",
                "pyIsPrimaryField": "false",
                "pyLabel": "Customer Explanation"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "DateTime",
                "pyDescription": "The date and time when the fee waiver request was evaluated.",
                "pyFieldSource": "User input",
                "pyGUID": "d704f7e6-e2e2-46cf-b34f-85ec2d5aa02f",
                "pyIsPrimaryField": "false",
                "pyLabel": "Evaluation Date"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "The employee responsible for processing and evaluating the fee waiver request.",
                "pyFieldSource": "User input",
                "pyGUID": "4f0d77f2-a7c2-4e69-bfd6-2a8ec54a940e",
                "pyIsPrimaryField": "false",
                "pyLabel": "Processor"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "DateTime",
                "pyDescription": "The date and time when the customer submitted the waiver request.",
                "pyFieldSource": "User input",
                "pyGUID": "2402818f-6c7f-49b5-bfd3-7953c877124c",
                "pyIsPrimaryField": "false",
                "pyLabel": "Request Submission Date"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "The outcome of the evaluation process for the fee waiver request.",
                "pyFieldSource": "User input",
                "pyGUID": "81cfab18-718f-4ab6-90cf-25cf368bee86",
                "pyIsPrimaryField": "false",
                "pyLabel": "Waiver Eligibility"
              }
            ],
            "pyCandidateStages": [
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateStages",
                "pyDescription": "Capture customer's request for fee waiver",
                "pyLabel": "Capture Request",
                "pyCandidateStageSteps": [
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Assign the case to a case manager",
                    "pyLabel": "Assign Case Manager",
                    "pyStepType": "Assignment"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Assess customer's eligibility for fee waiver",
                    "pyLabel": "Assess Eligibility",
                    "pyStepType": "Decision"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Notify the customer of the decision",
                    "pyLabel": "Notify Customer",
                    "pyStepType": "Send Notification"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Retrieve customer's account history",
                    "pyLabel": "Retrieve Customer History",
                    "pyStepType": "Automation"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Assign verification task to an agent",
                    "pyLabel": "Assign Verification",
                    "pyStepType": "Assignment"
                  }
                ]
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateStages",
                "pyDescription": "Review and validate customer's request and documentation",
                "pyLabel": "Review Request",
                "pyCandidateStageSteps": [
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Automatically validate customer's submitted documentation",
                    "pyLabel": "Validate Documentation",
                    "pyStepType": "Automation"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Verify if customer is experiencing financial hardship",
                    "pyLabel": "Verify Financial Hardship",
                    "pyStepType": "Decision"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Assign request approval to a supervisor",
                    "pyLabel": "Assign Approval",
                    "pyStepType": "Assignment"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Notify the customer of the request status",
                    "pyLabel": "Notify Customer",
                    "pyStepType": "Send Notification"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Review compliance with fee waiver policies",
                    "pyLabel": "Review Policy Compliance",
                    "pyStepType": "Decision"
                  }
                ]
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateStages",
                "pyDescription": "Process the approved fee waiver",
                "pyLabel": "Process Waiver",
                "pyCandidateStageSteps": [
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Assign processing of the fee waiver",
                    "pyLabel": "Assign Waiver Processing",
                    "pyStepType": "Assignment"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Automatically update customer's account with the waiver",
                    "pyLabel": "Update Customer Account",
                    "pyStepType": "Automation"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Approve the fee waiver request",
                    "pyLabel": "Approve Waiver",
                    "pyStepType": "Approval"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Notify the customer of the approved waiver",
                    "pyLabel": "Notify Customer",
                    "pyStepType": "Send Notification"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Verify the adjustment of customer's account balance",
                    "pyLabel": "Verify Balance Adjustment",
                    "pyStepType": "Decision"
                  }
                ]
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateStages",
                "pyDescription": "Finalize and conclude the fee waiver request",
                "pyLabel": "Finalize Resolution",
                "pyCandidateStageSteps": [
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Confirm the resolution of the fee waiver request",
                    "pyLabel": "Confirm Resolution",
                    "pyStepType": "Approval"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Notify the customer of the finalized resolution",
                    "pyLabel": "Notify Customer",
                    "pyStepType": "Send Notification"
                  }
                ]
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateStages",
                "pyDescription": "Close the fee waiver request case",
                "pyLabel": "Close Case",
                "pyCandidateStageSteps": [
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Automatically update the case status to closed",
                    "pyLabel": "Update Case Status",
                    "pyStepType": "Automation"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Notify the customer of the case closure",
                    "pyLabel": "Notify Customer",
                    "pyStepType": "Send Notification"
                  }
                ]
              }
            ]
          }
        },
        {
          "pxObjClass": "PegaBlueprint-Data-CandidateCaseTypes",
          "pyDCDChildSpunOff": "true",
          "pyDescription": "Bill Pay Exception addresses cases associated with customer-reported issues or errors in bill payments, such as failed transactions or incorrect payee details. The workflow involves investigating the payment discrepancy, rectifying the error, and providing necessary compensation or adjustments to the customer's account.",
          "pyGUID": "DCDCandidate20241216T181620.462 GMT",
          "pyLabel": "Bill Pay Exception",
          "pyDCDInfo": {
            "pxObjClass": "PegaBlueprint-Data-DCD",
            "pyDescription": "Bill Pay Exception addresses cases associated with customer-reported issues or errors in bill payments, such as failed transactions or incorrect payee details. The workflow involves investigating the payment discrepancy, rectifying the error, and providing necessary compensation or adjustments to the customer's account.",
            "pyLabel": "Bill Pay Exception",
            "pyAttachmentCategories": [],
            "pyCandidateAlternateStages": [],
            "pyCandidateChildCaseTypes": [],
            "pyCandidateCreateFields": [],
            "pyCandidateFields": [
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "Account Number - The unique identifier of the customer's account associated with the bill pay exception.",
                "pyFieldSource": "User input",
                "pyGUID": "d9bf709a-11b2-4800-b727-02285777f63c",
                "pyIsPrimaryField": "true",
                "pyLabel": "Account Number"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "Customer Name - The full name of the customer reporting the bill pay exception.",
                "pyFieldSource": "User input",
                "pyGUID": "d3456693-89c4-41d7-aca4-0a4c3adc65a3",
                "pyIsPrimaryField": "true",
                "pyLabel": "Customer Name"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Currency",
                "pyDescription": "Transaction Amount - The amount of the bill payment transaction that resulted in the exception.",
                "pyFieldSource": "User input",
                "pyGUID": "8c857074-e8c0-4506-87e8-5a022d762bc5",
                "pyIsPrimaryField": "true",
                "pyLabel": "Transaction Amount"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "DateTime",
                "pyDescription": "Transaction Date - The date when the bill payment transaction occurred.",
                "pyFieldSource": "User input",
                "pyGUID": "79968b39-f2e1-4a3c-9b11-91e27dd6dc8f",
                "pyIsPrimaryField": "true",
                "pyLabel": "Transaction Date"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Currency",
                "pyDescription": "Compensation Amount - The amount of compensation provided to the customer for the bill pay exception.",
                "pyFieldSource": "User input",
                "pyGUID": "797ab0b6-cb36-44d7-b8ee-22e0775de911",
                "pyIsPrimaryField": "false",
                "pyLabel": "Compensation Amount"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "Error Description - A detailed description of the error or issue reported by the customer regarding the bill payment.",
                "pyFieldSource": "User input",
                "pyGUID": "aebace69-c5ca-4f6a-8d3d-3867bbed9e85",
                "pyIsPrimaryField": "false",
                "pyLabel": "Error Description"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "Payee Name - The name of the payee to whom the bill payment was intended.",
                "pyFieldSource": "User input",
                "pyGUID": "2abd5a21-ffc3-4459-916b-30e97ff16640",
                "pyIsPrimaryField": "false",
                "pyLabel": "Payee Name"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "DateTime",
                "pyDescription": "Resolution Date - The date when the bill pay exception case was resolved.",
                "pyFieldSource": "User input",
                "pyGUID": "3f305d5c-c6a4-49e5-bb9a-7831ecc48ed6",
                "pyIsPrimaryField": "false",
                "pyLabel": "Resolution Date"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "Resolution Notes - Detailed notes documenting the steps taken to investigate and resolve the bill pay exception.",
                "pyFieldSource": "User input",
                "pyGUID": "178d22ca-101d-494b-8b1c-191395559ffc",
                "pyIsPrimaryField": "false",
                "pyLabel": "Resolution Notes"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "Transaction Reference Number - The unique identifier associated with the bill payment transaction.",
                "pyFieldSource": "User input",
                "pyGUID": "e20d8fea-c770-43b6-8082-584fbceb1411",
                "pyIsPrimaryField": "false",
                "pyLabel": "Transaction Reference Number"
              }
            ],
            "pyCandidateStages": [
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateStages",
                "pyDescription": "Capture customer-reported issues or errors in bill payments",
                "pyLabel": "Capture Details",
                "pyCandidateStageSteps": [
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Retrieve transaction details for the reported bill payment issue",
                    "pyLabel": "Retrieve Transaction Data",
                    "pyStepType": "Automation"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Assign the case to an investigator for further analysis",
                    "pyLabel": "Assign Investigator",
                    "pyStepType": "Assignment"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Assess if the reported bill payment issue is due to a failed transaction",
                    "pyLabel": "Is Payment Failed?",
                    "pyStepType": "Decision"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Assess if the reported bill payment issue is due to incorrect payee details",
                    "pyLabel": "Is Payee Details Correct?",
                    "pyStepType": "Decision"
                  }
                ]
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateStages",
                "pyDescription": "Analyze and investigate the reported bill payment issue",
                "pyLabel": "Investigate Issue",
                "pyCandidateStageSteps": [
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Gather necessary documents related to the reported payment discrepancy",
                    "pyLabel": "Collect Supporting Documents",
                    "pyStepType": "Assignment"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Validate transaction details to identify discrepancies",
                    "pyLabel": "Validate Transaction Data",
                    "pyStepType": "Automation"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Determine if an error is identified during the investigation",
                    "pyLabel": "Is Error Identified?",
                    "pyStepType": "Decision"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Assign the case to a resolution specialist for error rectification",
                    "pyLabel": "Assign Resolution Specialist",
                    "pyStepType": "Assignment"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Inform the customer about the ongoing investigation and resolution process",
                    "pyLabel": "Notify Customer",
                    "pyStepType": "Send Notification"
                  }
                ]
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateStages",
                "pyDescription": "Rectify the error identified during the investigation",
                "pyLabel": "Rectify Error",
                "pyCandidateStageSteps": [
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Automatically update the payment details to rectify the identified error",
                    "pyLabel": "Update Payment Details",
                    "pyStepType": "Automation"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Authorize the necessary compensation or adjustments to the customer's account",
                    "pyLabel": "Approve Compensation",
                    "pyStepType": "Approval"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Assign a quality check to ensure the error rectification is accurate",
                    "pyLabel": "Assign Quality Check",
                    "pyStepType": "Assignment"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Assess if the compensation or adjustments to the customer's account are approved",
                    "pyLabel": "Is Compensation Approved?",
                    "pyStepType": "Decision"
                  }
                ]
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateStages",
                "pyDescription": "Conclude the case with a resolution for the customer",
                "pyLabel": "Customer Resolution",
                "pyCandidateStageSteps": [
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Automatically update the case status to 'Resolved' upon completion",
                    "pyLabel": "Update Case Status",
                    "pyStepType": "Automation"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Inform the customer about the resolution and any necessary compensation or adjustments",
                    "pyLabel": "Notify Customer Resolution",
                    "pyStepType": "Send Notification"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Obtain final approval for the resolution and any compensations provided",
                    "pyLabel": "Final Approval",
                    "pyStepType": "Approval"
                  }
                ]
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateStages",
                "pyDescription": "Finalize the case and close it",
                "pyLabel": "Case Closure",
                "pyCandidateStageSteps": [
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Automatically update the customer's account with any necessary compensations or adjustments",
                    "pyLabel": "Update Customer Account",
                    "pyStepType": "Automation"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Automatically archive the case data for future reference",
                    "pyLabel": "Archive Case Data",
                    "pyStepType": "Automation"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Inform all involved parties about the closure of the case",
                    "pyLabel": "Notify Case Closure",
                    "pyStepType": "Send Notification"
                  }
                ]
              }
            ]
          }
        },
        {
          "pxObjClass": "PegaBlueprint-Data-CandidateCaseTypes",
          "pyDCDChildSpunOff": "true",
          "pyDescription": "Account Closure handles the process of closing customer accounts, including the review of closure requests, settlement of outstanding balances, and the closure of associated services or accounts. The workflow ensures compliance with regulatory requirements and facilitates a smooth account closure process for customers.",
          "pyGUID": "DCDCandidate20241216T181620.463 GMT",
          "pyLabel": "Account Closure",
          "pyDCDInfo": {
            "pxObjClass": "PegaBlueprint-Data-DCD",
            "pyDescription": "Account Closure handles the process of closing customer accounts, including the review of closure requests, settlement of outstanding balances, and the closure of associated services or accounts. The workflow ensures compliance with regulatory requirements and facilitates a smooth account closure process for customers.",
            "pyLabel": "Account Closure",
            "pyAttachmentCategories": [],
            "pyCandidateAlternateStages": [],
            "pyCandidateChildCaseTypes": [],
            "pyCandidateCreateFields": [],
            "pyCandidateFields": [
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "The unique account number associated with the account to be closed. This field is crucial for identifying the specific account and initiating the closure process.",
                "pyFieldSource": "User input",
                "pyGUID": "f12236bd-d825-4f5c-b067-949300eb3ca1",
                "pyIsPrimaryField": "true",
                "pyLabel": "Account Number"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "The customer's full name as it appears on the account to be closed. This field is essential for identifying the account and ensuring the accuracy of the closure process.",
                "pyFieldSource": "User input",
                "pyGUID": "97a5d428-2733-4c47-8c5c-e725f2f3eb02",
                "pyIsPrimaryField": "true",
                "pyLabel": "Customer Name"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Currency",
                "pyDescription": "The total outstanding balance on the account at the time of closure request. This field is important for financial reconciliation and settlement of the account's outstanding obligations.",
                "pyFieldSource": "User input",
                "pyGUID": "80b9a828-1b0d-4abb-98f5-f557041efdaf",
                "pyIsPrimaryField": "true",
                "pyLabel": "Outstanding Balance"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "Details of any associated services or accounts, such as linked savings accounts or credit cards, that need to be closed along with the main account. This field ensures comprehensive closure of all associated services.",
                "pyFieldSource": "User input",
                "pyGUID": "df1c854f-69d0-406e-995d-409b2e013461",
                "pyIsPrimaryField": "false",
                "pyLabel": "Associated Accounts"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "The reason provided by the customer for requesting the closure of the account. This field helps in understanding customer feedback and reasons for account closure.",
                "pyFieldSource": "User input",
                "pyGUID": "bbeb8826-65df-46e2-b7e4-b32d74696107",
                "pyIsPrimaryField": "false",
                "pyLabel": "Closure Reason"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "DateTime",
                "pyDescription": "The date when the account closure request was initiated by the customer. This field provides a timeline for the closure process and helps in tracking closure request trends.",
                "pyFieldSource": "User input",
                "pyGUID": "5ee84d5f-d3e3-4138-9904-83d9efdb06b2",
                "pyIsPrimaryField": "false",
                "pyLabel": "Closure Request Date"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "The customer's contact information, such as phone number or email, for communication related to the account closure process. This field is important for maintaining communication with the customer during the closure process.",
                "pyFieldSource": "User input",
                "pyGUID": "3ed3f31c-26fb-4e49-b30e-62ba7aeaea98",
                "pyIsPrimaryField": "false",
                "pyLabel": "Customer Contact Information"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "Additional notes or comments related to the account closure request or process. This field provides space for capturing any relevant remarks or observations.",
                "pyFieldSource": "User input",
                "pyGUID": "e035a8f9-d124-4499-901f-e99a4d4b9009",
                "pyIsPrimaryField": "false",
                "pyLabel": "Notes"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Boolean",
                "pyDescription": "Indicates whether there are any pending transactions or activities on the account that need to be settled before closure. This field helps in identifying outstanding activities that may impact the closure process.",
                "pyFieldSource": "User input",
                "pyGUID": "7f57e531-fc7d-43d8-b88b-58a42e2b4b57",
                "pyIsPrimaryField": "false",
                "pyLabel": "Pending Transactions"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Date",
                "pyDescription": "The anticipated or scheduled date for the final closure of the account. This field helps in planning and managing the account closure process within a specified timeline.",
                "pyFieldSource": "User input",
                "pyGUID": "c90e898e-f895-474b-9f83-1884de05e3ca",
                "pyIsPrimaryField": "false",
                "pyLabel": "Scheduled Closure Date"
              }
            ],
            "pyCandidateStages": [
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateStages",
                "pyDescription": "Capture customer account closure request details",
                "pyLabel": "Capture Request",
                "pyCandidateStageSteps": [
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Check the completeness and accuracy of closure request",
                    "pyLabel": "Validate Request",
                    "pyStepType": "Automation"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Evaluate and settle outstanding balances",
                    "pyLabel": "Review Balances",
                    "pyStepType": "Assignment"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Assess if closure request complies with regulatory requirements",
                    "pyLabel": "Is Compliance Met",
                    "pyStepType": "Decision"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Determine if more information is required for account closure",
                    "pyLabel": "Is Additional Info Needed",
                    "pyStepType": "Decision"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Inform customer about account closure process",
                    "pyLabel": "Notify Customer",
                    "pyStepType": "Send Notification"
                  }
                ]
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateStages",
                "pyDescription": "Handle closure of customer accounts and associated services",
                "pyLabel": "Process Closure",
                "pyCandidateStageSteps": [
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Initiate closure of customer account",
                    "pyLabel": "Close Account",
                    "pyStepType": "Automation"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Authorize closure of customer account",
                    "pyLabel": "Approve Closure",
                    "pyStepType": "Approval"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Check if associated services or accounts are closed",
                    "pyLabel": "Are Services Closed",
                    "pyStepType": "Decision"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Inform relevant stakeholders about account closure",
                    "pyLabel": "Notify Stakeholders",
                    "pyStepType": "Send Notification"
                  }
                ]
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateStages",
                "pyDescription": "Finalize settlement of outstanding balances",
                "pyLabel": "Settle Balances",
                "pyCandidateStageSteps": [
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Determine the final amount for settlement",
                    "pyLabel": "Calculate Final Balance",
                    "pyStepType": "Automation"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Reach out to customer for balance settlement",
                    "pyLabel": "Contact Customer",
                    "pyStepType": "Assignment"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Authorize the settlement of outstanding balances",
                    "pyLabel": "Approve Settlement",
                    "pyStepType": "Approval"
                  }
                ]
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateStages",
                "pyDescription": "Record and archive account closure details",
                "pyLabel": "Document Closure",
                "pyCandidateStageSteps": [
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Create a report documenting account closure",
                    "pyLabel": "Generate Closure Report",
                    "pyStepType": "Automation"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Store documents related to account closure",
                    "pyLabel": "Archive Documents",
                    "pyStepType": "Assignment"
                  }
                ]
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateStages",
                "pyDescription": "Finalize account closure process",
                "pyLabel": "Complete Closure",
                "pyCandidateStageSteps": [
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Update customer records with closure details",
                    "pyLabel": "Update Records",
                    "pyStepType": "Automation"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Verify and confirm account closure",
                    "pyLabel": "Confirm Closure",
                    "pyStepType": "Approval"
                  }
                ]
              }
            ]
          }
        },
        {
          "pxObjClass": "PegaBlueprint-Data-CandidateCaseTypes",
          "pyDCDChildSpunOff": "true",
          "pyDescription": "Payment Discrepancy Investigation manages cases related to customer-reported discrepancies in account transactions, such as missing or incorrect payments. The workflow involves conducting a thorough investigation, reconciling the discrepancies, and providing the customer with a comprehensive resolution and explanation.",
          "pyGUID": "DCDCandidate20241216T181620.464 GMT",
          "pyLabel": "Payment Investigation",
          "pyDCDInfo": {
            "pxObjClass": "PegaBlueprint-Data-DCD",
            "pyDescription": "Payment Discrepancy Investigation manages cases related to customer-reported discrepancies in account transactions, such as missing or incorrect payments. The workflow involves conducting a thorough investigation, reconciling the discrepancies, and providing the customer with a comprehensive resolution and explanation.",
            "pyLabel": "Payment Investigation",
            "pyAttachmentCategories": [],
            "pyCandidateAlternateStages": [],
            "pyCandidateChildCaseTypes": [],
            "pyCandidateCreateFields": [],
            "pyCandidateFields": [
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "The unique identifier for the customer's account.",
                "pyFieldSource": "User input",
                "pyGUID": "922e1906-6ba6-4446-bb26-b778fc03afc1",
                "pyIsPrimaryField": "true",
                "pyLabel": "Account Number"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "The customer's full name.",
                "pyFieldSource": "User input",
                "pyGUID": "18b0cc73-99f6-460c-a507-f0d9f1c59733",
                "pyIsPrimaryField": "true",
                "pyLabel": "Customer Name"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "The reason provided by the customer for disputing the payment.",
                "pyFieldSource": "User input",
                "pyGUID": "6f29953b-650f-4ba2-8296-b7dc7e234045",
                "pyIsPrimaryField": "true",
                "pyLabel": "Discrepancy Reason"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Currency",
                "pyDescription": "The amount of the disputed payment.",
                "pyFieldSource": "User input",
                "pyGUID": "f8b02b67-f79a-460a-a9bd-4603c23c3913",
                "pyIsPrimaryField": "true",
                "pyLabel": "Disputed Amount"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "DateTime",
                "pyDescription": "The date and time when the payment discrepancy was reported by the customer.",
                "pyFieldSource": "User input",
                "pyGUID": "14042a86-8330-43d9-8dc5-9af3b3bbd19c",
                "pyIsPrimaryField": "true",
                "pyLabel": "Reported Date"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "Additional notes or comments related to the payment investigation.",
                "pyFieldSource": "User input",
                "pyGUID": "3424c6f6-45fd-4402-bd2f-c904ef253e13",
                "pyIsPrimaryField": "false",
                "pyLabel": "Investigation Notes"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "The outcome of the investigation, such as 'Payment reconciled', 'Refund issued', 'Late fee waived', etc.",
                "pyFieldSource": "User input",
                "pyGUID": "4b0bfb05-b4bb-4aa3-b787-8c31793d71b1",
                "pyIsPrimaryField": "false",
                "pyLabel": "Investigation Outcome"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "DateTime",
                "pyDescription": "The date and time when the payment investigation was initiated.",
                "pyFieldSource": "User input",
                "pyGUID": "e7fd9c99-31d2-4a15-9138-20a0a4d94c22",
                "pyIsPrimaryField": "false",
                "pyLabel": "Investigation Start Date"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "The status of the payment investigation, such as 'Open', 'In Progress', 'Resolved', etc.",
                "pyFieldSource": "User input",
                "pyGUID": "3342eacd-786f-45e4-80c1-3cc38f8c39c0",
                "pyIsPrimaryField": "false",
                "pyLabel": "Investigation Status"
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
                "pyDataType": "Text",
                "pyDescription": "The description of the investigation findings and resolution provided to the customer.",
                "pyFieldSource": "User input",
                "pyGUID": "04ed7431-4928-435e-bbb9-607f3ed18774",
                "pyIsPrimaryField": "false",
                "pyLabel": "Resolution Description"
              }
            ],
            "pyCandidateStages": [
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateStages",
                "pyDescription": "Capture customer-reported payment discrepancies and account information",
                "pyLabel": "Capture Details",
                "pyCandidateStageSteps": [
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Assign the payment investigation to a fraud analyst",
                    "pyLabel": "Assign Investigation",
                    "pyStepType": "Assignment"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Verify the reported payment details for accuracy",
                    "pyLabel": "Verify Payment Details",
                    "pyStepType": "Decision"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Identify any discrepancies in the reported payment",
                    "pyLabel": "Identify Discrepancies",
                    "pyStepType": "Decision"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Automatically retrieve transaction records for the reported payment",
                    "pyLabel": "Retrieve Transaction Records",
                    "pyStepType": "Automation"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Assess the risk of fraud related to the reported payment",
                    "pyLabel": "Assess Fraud Risk",
                    "pyStepType": "Decision"
                  }
                ]
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateStages",
                "pyDescription": "Conduct a thorough investigation into the payment discrepancies",
                "pyLabel": "Investigation",
                "pyCandidateStageSteps": [
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Assign the reconciliation of discrepancies to a financial analyst",
                    "pyLabel": "Assign Reconciliation",
                    "pyStepType": "Assignment"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Review the retrieved transaction records for discrepancies",
                    "pyLabel": "Review Transaction Records",
                    "pyStepType": "Decision"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Validate the amount of the reported payment with transaction records",
                    "pyLabel": "Validate Payment Amount",
                    "pyStepType": "Decision"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Automatically update transaction records with resolution details",
                    "pyLabel": "Update Transaction Records",
                    "pyStepType": "Automation"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Determine the root cause of the payment discrepancies",
                    "pyLabel": "Determine Root Cause",
                    "pyStepType": "Decision"
                  }
                ]
              },
              {
                "pxObjClass": "PegaBlueprint-Data-CandidateStages",
                "pyDescription": "Provide a comprehensive resolution and explanation to the customer",
                "pyLabel": "Resolution",
                "pyCandidateStageSteps": [
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Approve the resolution and explanation to be provided to the customer",
                    "pyLabel": "Approve Resolution",
                    "pyStepType": "Approval"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Automatically generate a resolution letter for the customer",
                    "pyLabel": "Generate Resolution Letter",
                    "pyStepType": "Automation"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Send a notification to the customer with the resolution details",
                    "pyLabel": "Notify Customer",
                    "pyStepType": "Send Notification"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Send a notification to customer service for case closure",
                    "pyLabel": "Notify Customer Service",
                    "pyStepType": "Send Notification"
                  },
                  {
                    "pxObjClass": "PegaBlueprint-Data-StageSteps",
                    "pyDescription": "Approve the closure of the payment investigation case",
                    "pyLabel": "Approve Case Closure",
                    "pyStepType": "Approval"
                  }
                ]
              }
            ]
          }
        }
      ],
      "pyCandidateDataObjects": [
        {
          "pxObjClass": "PegaBlueprint-Data-CandidateDataObjects",
          "pyDescription": "Represents the Customer Account object containing details such as account number, account type, balance, and status. It is connected to the Customer Account System of Record for real-time account information retrieval and updates.",
          "pyGUID": "7e673c41-33e4-4568-b949-4eb36273e5b7",
          "pyIsExternalModel": "false",
          "pyLabel": "Customer Account",
          "pySystemOfRecordId": "PEGA_LOCAL",
          "pyCandidateFields": [
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Text",
              "pyDescription": "The unique identifier for the customer's account, typically in alphanumeric format, used for account identification and reference in various banking operations and communications.",
              "pyFieldSource": "User input",
              "pyGUID": "2f7dc141-6e55-4687-8b3d-aa2f9fffecd3",
              "pyIsPrimaryField": "true",
              "pyLabel": "Account Number"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Text",
              "pyDescription": "The current status of the customer's account, such as active, inactive, or closed, indicating the operational state of the account.",
              "pyFieldSource": "User input",
              "pyGUID": "38577f09-af4c-470b-b68b-f3d17e6b1d7f",
              "pyIsPrimaryField": "true",
              "pyLabel": "Account Status"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Text",
              "pyDescription": "The type of account, such as savings, checking, or money market, indicating the nature of the customer's financial account.",
              "pyFieldSource": "User input",
              "pyGUID": "a9654cbc-128c-41c2-a7f0-c6a0a85a249e",
              "pyIsPrimaryField": "true",
              "pyLabel": "Account Type"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Currency",
              "pyDescription": "The amount of money in the customer's account, denominated in the local currency, representing the financial value of the account at a specific point in time.",
              "pyFieldSource": "User input",
              "pyGUID": "866d48f1-1314-4c4b-8b0f-e8b300368a28",
              "pyIsPrimaryField": "true",
              "pyLabel": "Balance"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Date",
              "pyDescription": "The date when the account is scheduled to be closed, providing the expected termination date for the account's usage.",
              "pyFieldSource": "User input",
              "pyGUID": "a62c2abb-03d8-4c00-80fb-bd8587287ce1",
              "pyIsPrimaryField": "false",
              "pyLabel": "Account Closure Date"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "DateTime",
              "pyDescription": "The date and time when the account was opened, providing the initial timestamp for the account's existence and usage.",
              "pyFieldSource": "User input",
              "pyGUID": "fcc83308-e761-40d9-bde7-9421ca3e1bfd",
              "pyIsPrimaryField": "false",
              "pyLabel": "Account Opened Date"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Text",
              "pyDescription": "The customer's email address associated with the account for communication and digital notifications.",
              "pyFieldSource": "User input",
              "pyGUID": "86ecaba2-13eb-4a4c-85b8-170972086c2b",
              "pyIsPrimaryField": "false",
              "pyLabel": "Customer Email"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Phone",
              "pyDescription": "The customer's phone number associated with the account for direct communication and customer service interactions.",
              "pyFieldSource": "User input",
              "pyGUID": "638729cd-bfb0-4819-b422-159c8a969c22",
              "pyIsPrimaryField": "false",
              "pyLabel": "Customer Phone Number"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Decimal",
              "pyDescription": "The interest rate applied to the account, expressed as a decimal value, indicating the percentage of interest earned on the account balance over a specific time period.",
              "pyFieldSource": "User input",
              "pyGUID": "11151bd4-7290-4248-8a5f-fb6e2e0b5156",
              "pyIsPrimaryField": "false",
              "pyLabel": "Interest Rate"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "URL",
              "pyDescription": "The web address for the customer's online account portal, providing access to account details, transactions, and digital banking services.",
              "pyFieldSource": "User input",
              "pyGUID": "11755411-fa4a-4e4e-b844-55d08f6cf93c",
              "pyIsPrimaryField": "false",
              "pyLabel": "Online Account Portal URL"
            }
          ],
          "pyCrudURLs": {
            "pxObjClass": "PegaBlueprint-Data-AssociatedCRUDURLs"
          }
        },
        {
          "pxObjClass": "PegaBlueprint-Data-CandidateDataObjects",
          "pyDescription": "Represents the Customer Concern object, capturing details such as concern type, description, status, and resolution. It is ideally connected to the Customer Relationship Management (CRM) system to track customer interactions and resolutions.",
          "pyGUID": "6b14d62e-5d4a-43eb-8b09-2d35af443e4d",
          "pyIsExternalModel": "false",
          "pyLabel": "Customer Concern",
          "pySystemOfRecordId": "PEGA_LOCAL",
          "pyCandidateFields": [
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Text",
              "pyDescription": "The type of concern the customer has raised, such as bill pay, bank fees, or finance charges. This field captures the nature of the customer's issue.",
              "pyFieldSource": "User input",
              "pyGUID": "5fffd1a3-cea8-4f69-98e1-a915d856fb7d",
              "pyIsPrimaryField": "true",
              "pyLabel": "Concern Type"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Text",
              "pyDescription": "A detailed description of the customer's concern or request. This field provides context and specifics about the customer's issue.",
              "pyFieldSource": "User input",
              "pyGUID": "8e3eb3a8-2621-4428-a657-39ab27f77a28",
              "pyIsPrimaryField": "true",
              "pyLabel": "Description"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Text",
              "pyDescription": "The resolution or outcome of the customer concern. This field captures how the issue was addressed and resolved.",
              "pyFieldSource": "User input",
              "pyGUID": "a874c821-7a14-4764-8350-bf93fcfea0ea",
              "pyIsPrimaryField": "true",
              "pyLabel": "Resolution"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Text",
              "pyDescription": "The current status of the customer concern, such as open, in progress, or resolved. This field tracks the progress of addressing the customer's issue.",
              "pyFieldSource": "User input",
              "pyGUID": "edce1d30-861f-4c46-8853-ed0475d74e30",
              "pyIsPrimaryField": "true",
              "pyLabel": "Status"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Text",
              "pyDescription": "The channel through which the concern was raised, such as phone, email, or in-person. This field captures the method of communication used by the customer.",
              "pyFieldSource": "User input",
              "pyGUID": "39e098f4-c964-4ea4-abb3-bb21a790809c",
              "pyIsPrimaryField": "false",
              "pyLabel": "Communication Channel"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Text",
              "pyDescription": "The unique identifier for the customer concern. This field provides a reference number for tracking and managing the concern.",
              "pyFieldSource": "User input",
              "pyGUID": "d23c37fd-36d4-4804-af4d-df9477f1dbc4",
              "pyIsPrimaryField": "false",
              "pyLabel": "Concern ID"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Text",
              "pyDescription": "The contact information for the customer, such as phone number or email address. This field provides a means of communication with the customer.",
              "pyFieldSource": "User input",
              "pyGUID": "cae25bb8-511a-4075-b35b-a507bdcbb8ce",
              "pyIsPrimaryField": "false",
              "pyLabel": "Customer Contact"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Text",
              "pyDescription": "The customer's name associated with the concern. This field captures the name of the individual who raised the concern.",
              "pyFieldSource": "User input",
              "pyGUID": "668f0d1c-1416-48ae-9c9a-2a004b9ab5b3",
              "pyIsPrimaryField": "false",
              "pyLabel": "Customer Name"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Text",
              "pyDescription": "The location or branch associated with the customer concern. This field captures the physical or virtual location where the issue originated.",
              "pyFieldSource": "User input",
              "pyGUID": "45a1446f-08a5-41bd-b43a-0a6b4773b181",
              "pyIsPrimaryField": "false",
              "pyLabel": "Location"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "DateTime",
              "pyDescription": "The date and time when the customer concern was raised or reported. This field captures the timestamp of when the issue was initially brought to attention.",
              "pyFieldSource": "User input",
              "pyGUID": "be8f3894-9901-42a7-8126-aa5185ce624a",
              "pyIsPrimaryField": "false",
              "pyLabel": "Reported Date"
            }
          ],
          "pyCrudURLs": {
            "pxObjClass": "PegaBlueprint-Data-AssociatedCRUDURLs"
          }
        },
        {
          "pxObjClass": "PegaBlueprint-Data-CandidateDataObjects",
          "pyDescription": "Represents the Bill Pay Request object, including details such as payee, amount, scheduled date, and status. It is connected to the Bill Pay Service for processing customer bill payments.",
          "pyGUID": "523dff9a-f2e1-4696-896c-243a19abba49",
          "pyIsExternalModel": "false",
          "pyLabel": "Bill Pay Request",
          "pySystemOfRecordId": "PEGA_LOCAL",
          "pyCandidateFields": [
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Currency",
              "pyDescription": "The amount of the bill to be paid.",
              "pyFieldSource": "User input",
              "pyGUID": "aa54c4e3-5d95-4852-94a3-f41929066bc6",
              "pyIsPrimaryField": "true",
              "pyLabel": "Bill Amount"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Text",
              "pyDescription": "The name of the payee or company to be paid for the bill.",
              "pyFieldSource": "User input",
              "pyGUID": "2841c06d-1512-43d7-8611-7b5f84793022",
              "pyIsPrimaryField": "true",
              "pyLabel": "Payee Name"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Text",
              "pyDescription": "The current status of the bill payment request, such as pending, in progress, or completed.",
              "pyFieldSource": "User input",
              "pyGUID": "395e980b-a718-4e5b-a69b-7c12ee4ac04b",
              "pyIsPrimaryField": "true",
              "pyLabel": "Payment Status"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Date",
              "pyDescription": "The date when the bill payment is scheduled to be processed.",
              "pyFieldSource": "User input",
              "pyGUID": "a5f02df3-0753-4740-bd62-8fa5d6cc91f2",
              "pyIsPrimaryField": "true",
              "pyLabel": "Scheduled Payment Date"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "URL",
              "pyDescription": "The URL link to the bill payment request details or confirmation.",
              "pyFieldSource": "User input",
              "pyGUID": "98b44400-7bdb-4bb1-a21f-1820d6c9b5f0",
              "pyIsPrimaryField": "false",
              "pyLabel": "Confirmation Link"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Email",
              "pyDescription": "The email address associated with the bill payment request, if applicable.",
              "pyFieldSource": "User input",
              "pyGUID": "46d9aa1f-a1d9-4362-8eeb-707312a0f4c1",
              "pyIsPrimaryField": "false",
              "pyLabel": "Contact Email"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Phone",
              "pyDescription": "The contact phone number associated with the bill payment request, if applicable.",
              "pyFieldSource": "User input",
              "pyGUID": "3f3f92ba-1925-4010-992c-05dc2f4de321",
              "pyIsPrimaryField": "false",
              "pyLabel": "Contact Phone"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "DateTime",
              "pyDescription": "The date and time when the bill payment request was created.",
              "pyFieldSource": "User input",
              "pyGUID": "70f9fe9d-27c2-4045-a22d-89b3ba92f676",
              "pyIsPrimaryField": "false",
              "pyLabel": "Creation Date"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Text",
              "pyDescription": "Additional notes or comments related to the bill payment request.",
              "pyFieldSource": "User input",
              "pyGUID": "5cc86b31-a80b-45d9-96f9-10ae04775123",
              "pyIsPrimaryField": "false",
              "pyLabel": "Notes"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Text",
              "pyDescription": "The unique identifier for the bill payment request.",
              "pyFieldSource": "User input",
              "pyGUID": "167e65e0-1bc9-47f0-81af-3b60c0e8701c",
              "pyIsPrimaryField": "false",
              "pyLabel": "Request ID"
            }
          ],
          "pyCrudURLs": {
            "pxObjClass": "PegaBlueprint-Data-AssociatedCRUDURLs"
          }
        },
        {
          "pxObjClass": "PegaBlueprint-Data-CandidateDataObjects",
          "pyDescription": "Represents the Bank Fee object, holding information such as fee type, amount, date, and status. It is connected to the Fee Management System to manage and track bank fees for customer accounts.",
          "pyGUID": "41761f01-3628-4f30-989a-054c6f762e36",
          "pyIsExternalModel": "false",
          "pyLabel": "Bank Fee",
          "pySystemOfRecordId": "PEGA_LOCAL",
          "pyCandidateFields": [
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Currency",
              "pyDescription": "The amount of the bank fee charged to the customer's account.",
              "pyFieldSource": "User input",
              "pyGUID": "c5835091-6536-4cb0-87da-0a536458ec1f",
              "pyIsPrimaryField": "true",
              "pyLabel": "Fee Amount"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Date",
              "pyDescription": "The date when the bank fee was applied to the customer's account.",
              "pyFieldSource": "User input",
              "pyGUID": "0429de3f-3c08-423a-bfcb-2d34f2a0e2d2",
              "pyIsPrimaryField": "true",
              "pyLabel": "Fee Date"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Text",
              "pyDescription": "The current status of the bank fee, such as pending, paid, or waived.",
              "pyFieldSource": "User input",
              "pyGUID": "9ace5d0b-7440-4b2d-b6bf-36e43dc9a952",
              "pyIsPrimaryField": "true",
              "pyLabel": "Fee Status"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Text",
              "pyDescription": "Type of the bank fee, such as overdraft fee, ATM fee, or wire transfer fee.",
              "pyFieldSource": "User input",
              "pyGUID": "b4471ab1-5711-4c9e-a82d-eec0efc9acae",
              "pyIsPrimaryField": "true",
              "pyLabel": "Fee Type"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Text",
              "pyDescription": "The customer's account number associated with the bank fee.",
              "pyFieldSource": "User input",
              "pyGUID": "9933d945-e3c4-40b1-ae2d-6fca16399843",
              "pyIsPrimaryField": "false",
              "pyLabel": "Account Number"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Text",
              "pyDescription": "The ID of the customer service representative handling the bank fee request.",
              "pyFieldSource": "User input",
              "pyGUID": "79d261bb-7d9d-4a0d-8320-886938fbfc46",
              "pyIsPrimaryField": "false",
              "pyLabel": "CSR ID"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Text",
              "pyDescription": "The customer's full name associated with the bank fee.",
              "pyFieldSource": "User input",
              "pyGUID": "a7a0d1d4-cd08-4ff1-b709-5eb7017dd869",
              "pyIsPrimaryField": "false",
              "pyLabel": "Customer Name"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Text",
              "pyDescription": "The reason provided by the customer for disputing the bank fee.",
              "pyFieldSource": "User input",
              "pyGUID": "cc9aa415-2853-4d45-b349-b6a309899ce9",
              "pyIsPrimaryField": "false",
              "pyLabel": "Dispute Reason"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "DateTime",
              "pyDescription": "The date and time when the bank fee record was last updated.",
              "pyFieldSource": "User input",
              "pyGUID": "577d6c39-8e83-4023-adc5-3e760c21b1c1",
              "pyIsPrimaryField": "false",
              "pyLabel": "Last Updated"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Text",
              "pyDescription": "The reference number for the bank fee transaction.",
              "pyFieldSource": "User input",
              "pyGUID": "12649f7a-7b21-46a2-9f07-46213ef589f6",
              "pyIsPrimaryField": "false",
              "pyLabel": "Transaction Reference"
            }
          ],
          "pyCrudURLs": {
            "pxObjClass": "PegaBlueprint-Data-AssociatedCRUDURLs"
          }
        },
        {
          "pxObjClass": "PegaBlueprint-Data-CandidateDataObjects",
          "pyDescription": "Represents the Finance Charge object, capturing details such as charge type, amount, date, and status. It is connected to the Finance Management System for tracking and managing finance charges applied to customer accounts.",
          "pyGUID": "ca13f24f-1e2c-4d88-8499-e3b00bc3dabc",
          "pyIsExternalModel": "false",
          "pyLabel": "Finance Charge",
          "pySystemOfRecordId": "PEGA_LOCAL",
          "pyCandidateFields": [
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Currency",
              "pyDescription": "Amount of the finance charge applied to the customer's account.",
              "pyFieldSource": "User input",
              "pyGUID": "a7a3340d-1ae3-45b2-88e3-8c423dfd48ee",
              "pyIsPrimaryField": "true",
              "pyLabel": "Charge Amount"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Date",
              "pyDescription": "Date when the finance charge was applied to the customer's account.",
              "pyFieldSource": "User input",
              "pyGUID": "be875b03-fb0f-44af-9dbc-e6d67a68b039",
              "pyIsPrimaryField": "true",
              "pyLabel": "Charge Date"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Text",
              "pyDescription": "Status of the finance charge, such as pending, processed, or waived.",
              "pyFieldSource": "User input",
              "pyGUID": "2fbd4d20-927d-4bb6-9662-84c5a1ab70ec",
              "pyIsPrimaryField": "true",
              "pyLabel": "Charge Status"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Text",
              "pyDescription": "Type of finance charge, such as late fee, overdraft fee, or interest charge.",
              "pyFieldSource": "User input",
              "pyGUID": "e62e9ed8-8a12-48ea-b239-439d4005e0d0",
              "pyIsPrimaryField": "true",
              "pyLabel": "Charge Type"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Text",
              "pyDescription": "Customer account number associated with the finance charge.",
              "pyFieldSource": "User input",
              "pyGUID": "061b9967-fd6c-4207-a908-ee8ff7848f2b",
              "pyIsPrimaryField": "false",
              "pyLabel": "Account Number"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Text",
              "pyDescription": "Reason or description of the finance charge applied to the customer's account.",
              "pyFieldSource": "User input",
              "pyGUID": "5c392473-94ee-46ca-9e69-a216c52f9f1f",
              "pyIsPrimaryField": "false",
              "pyLabel": "Charge Description"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Text",
              "pyDescription": "Customer name associated with the finance charge.",
              "pyFieldSource": "User input",
              "pyGUID": "17ecd2e7-8181-4c4d-8cba-a30ed52e2e52",
              "pyIsPrimaryField": "false",
              "pyLabel": "Customer Name"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "DateTime",
              "pyDescription": "Date and time when the finance charge record was last updated.",
              "pyFieldSource": "User input",
              "pyGUID": "1de9ca8a-0cf6-47a6-9f95-1945947456f3",
              "pyIsPrimaryField": "false",
              "pyLabel": "Last Updated Date"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "DateTime",
              "pyDescription": "Date and time when the finance charge record was created.",
              "pyFieldSource": "User input",
              "pyGUID": "6367c369-9a0f-4d00-8f31-bc520ea16ca1",
              "pyIsPrimaryField": "false",
              "pyLabel": "Record Creation Date"
            },
            {
              "pxObjClass": "PegaBlueprint-Data-CandidateDataFields",
              "pyDataType": "Boolean",
              "pyDescription": "Indicator of whether the finance charge has been resolved or not.",
              "pyFieldSource": "User input",
              "pyGUID": "f2f2a92a-681d-461d-9852-fce7acd362e0",
              "pyIsPrimaryField": "false",
              "pyLabel": "Resolved"
            }
          ],
          "pyCrudURLs": {
            "pxObjClass": "PegaBlueprint-Data-AssociatedCRUDURLs"
          }
        }
      ],
      "pyCandidatePersonas": [
        {
          "pxObjClass": "PegaBlueprint-Data-CandidatePersonas",
          "pyDescription": "The Customer Service Representative responsible for handling and resolving customer inquiries, disputes, and complaints related to account issues such as bill pay, bank fees, and finance charges.",
          "pyLabel": "Customer Service Representative"
        },
        {
          "pxObjClass": "PegaBlueprint-Data-CandidatePersonas",
          "pyDescription": "The Bank Manager who oversees the resolution of complex account issues, provides guidance to customer service representatives, and ensures customer satisfaction and retention.",
          "pyLabel": "Bank Manager"
        },
        {
          "pxObjClass": "PegaBlueprint-Data-CandidatePersonas",
          "pyDescription": "The Account Holder who uses the application to submit requests for bill pay, dispute bank fees, or inquire about finance charges, and expects timely and satisfactory resolution of their concerns.",
          "pyLabel": "Account Holder"
        },
        {
          "pxObjClass": "PegaBlueprint-Data-CandidatePersonas",
          "pyDescription": "The Financial Advisor who assists clients in understanding and resolving account issues, provides financial guidance, and ensures that clients' financial goals align with account management.",
          "pyLabel": "Financial Advisor"
        },
        {
          "pxObjClass": "PegaBlueprint-Data-CandidatePersonas",
          "pyDescription": "The Accountant who uses the application to reconcile and verify account transactions, address discrepancies, and ensure accurate financial reporting for the organization.",
          "pyLabel": "Accountant"
        }
      ],
      "pyCandidateSystemOfRecords": []
    },
    "pySourcePage": {
      "pxObjClass": "Embed-DataSource",
      "pySourceClass": "PegaBlueprint-Data-Blueprint",
      "pySourceIdentifier": "GetBlueprintFomDAD",
      "pySourceNumber": "1",
      "pySourceType": "Data Transform"
    },
    "pyText": "By utilizing this file, you agree that the file and the contents are confidential and are provided solely for use with Pegasystems applications and products. Information in this file may have been generated by artificial intelligence and should be validated by a human prior to use. This file is provided as is."
  }

//   let summary = `bp.pyDADInfo.Organization`
//   bp.pyDADInfo.pyCandidateCaseTypes.forEach((element) => {
//     summary += `${element.pyLabel}: ${element.pyDescription} \FIELDS TO COLLECT:\n`
    

    
//     element.pyDCDInfo.pyCandidateFields.forEach((field) => {
        
//         if(field.pyIsPrimaryField == "true"){
//             //console.log(field)
//         summary += `[${field.pyIsPrimaryField}]${field.pyLabel}: ${field.pyDescription}\n`
//         }
//     })

    
//     // element.pyDCDInfo.pyCandidateStages.forEach((stage) => {
//     //     if(stage.pyLabel != "Capture Details"){
//     //         return;
//     //     }
//     //     console.log(stage)
//     // })

//     console.log(summary + "\n\n");
// });



const formatLabel = function(str){
    return str.replace(/\s+/g, '_');
}

const generateGenAIFunctions = function(blueprintJson){

    let functions = [];

    blueprintJson.pyDADInfo.pyCandidateCaseTypes.forEach((element) => {
        let newFunction = generateGenAIFunction(element);
        functions.push(newFunction)   

    });

    return functions;
}



const generateGenAIFunction = function(element){
        let newFunction = {
            type: "function",
            name: formatLabel(element.pyLabel),
            description: element.pyDescription,
            parameters: {
                type: "object",
                properties: {
                    
                },
                required: []
            }
        };    
        
        element.pyDCDInfo.pyCandidateFields.forEach((field) => {
            
            if(field.pyIsPrimaryField == "true"){


            let description = field.pyDescription;
            let label = formatLabel(field.pyLabel);
            
            newFunction.parameters.properties = {
                ...newFunction.parameters.properties,                
                [label]: { 
                    'type': 'string',
                    'description': description},
            }

            newFunction.parameters.required.push(label); 
            }

        }) 
        return newFunction;
}


export const bpGeneratePromp = function(){
    const  functions = generateGenAIFunctions(bp);
    const organization = bp.pyDADInfo.Organization;

    const SYSTEM_MESSAGE = `Assume the role of a customer service representative working for ${organization}. You job is to assist customers in the call center. You can only assist customers with the tasks defined within tools/functions. You may only answer questions related to ${organization}.`;

    return {prompt : SYSTEM_MESSAGE, functions: [...functions], organization: organization}
}


//console.log(JSON.stringify(bpGeneratePromp()));

